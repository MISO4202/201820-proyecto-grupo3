Aplicacion Automarket{
	SmartContract AutoMarket{
		Entidad Vehiculo {
			string Marca
			string Modelo
			string Linea
			int Cilindraje
          	address Placa
          	int Precio
          	bool Nuevo
          	string Comentarios
		}
		Estado MapaVehiculos Vehiculos
		Estado MapaVehiculos VehiculosCaros
		Estado MapaVehiculos VehiculosBaratos
		Estado string pruebaCambioCadena
		
		Operacion isUd=true OperacionUsuario (){
			
		}
		
		Operacion isUd=false CrearVehiculo (string Marca, string Modelo, string Linea, address Placa, int Cilindraje, int Precio){
			var Vehiculo vehiculo
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Marca"} = ExpRef {Marca})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Modelo"} = ExpRef {Modelo})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Linea"} = ExpRef {Linea})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Cilindraje"} = ExpRef {Cilindraje})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Placa"} = ExpRef {Placa})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Precio"} = ExpRef {Precio})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Nuevo"} = ExpBool true)
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Comentarios"} = ExpTex "SinComentarios")
			ExpArit (ExpArit ExpRef {Vehiculos} PUT ExpRef {Placa}) = ExpRef {vehiculo}
			if ExpLog ((ExpRef{Precio}>= ExpNum 1000000000))
			{
				ExpArit (ExpArit ExpRef {VehiculosCaros} GET ExpRef {Placa}) = ExpRef {vehiculo}
			}else{
				ExpArit (ExpArit ExpRef {VehiculosBaratos} GET ExpRef {Placa}) = ExpRef {vehiculo}
			}
		}
		Operacion isUd=false ConsultarVehiculo (address Placa) : string { 			
			return {ExpRel ExpArit ExpRef {Vehiculos} GET ExpRef {Placa} . ExpRef{"Vehiculo.Marca"} }	 
		}
		Operacion isUd=false CalcularCostos (int PrecioVehiculo,int ImpuestoVehiculo, int ValorTraspaso, int ComisionRunt) : int {
			return {ExpArit (ExpArit (ExpArit (ExpRef{PrecioVehiculo} + (ExpArit (ExpRef{PrecioVehiculo} * ExpRef{ImpuestoVehiculo}))
				+ ExpRef{ValorTraspaso}) + ExpRef{ComisionRunt})}
				
		}
		
		Operacion isUd=false ActualizarVehiculo (address Placa, int Cilindraje, int Precio){
			var Vehiculo vehiculo
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Cilindraje"} = ExpRef {Cilindraje})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Placa"} = ExpRef {Placa})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Precio"} = ExpRef {Precio})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Nuevo"} = ExpBool false)
			ExpArit (ExpArit ExpRef {Vehiculos} PUT ExpRef {Placa}) = ExpRef {vehiculo}	
		}
		
	}
	tipodato String string
	tipodato ADDRESS address
	tipodato Integer int
	tipodato Double double
	tipodato Boolean bool
	tipodato Map <address,"AutoMarket.Vehiculo"> : MapaVehiculos
}