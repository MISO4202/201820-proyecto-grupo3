Aplicacion Automarket{
	SmartContract AutoMarket{
		Entidad Vehiculo {
			
			string Marca
          	string Modelo
          	string Linea
          	int Cilindraje
          	string Placa
          	int Precio
          	bool Nuevo
          	string Comentarios
			
		}
		Estado MapaVehiculos Vehiculos
        Estado MapaVehiculos VehiculosCaros
        Estado MapaVehiculos VehiculosBaratos
		Operacion isUd=false ConsultarVehiculo (string Placa) : Vehiculo { 		
			ExpArit ExpRef {Vehiculos} GET ExpRef {Placa}	 
		}
		Operacion isUd=false CalcularCostos (int PrecioVehiculo,int ImpuestoVehiculo, int ValorTraspaso, int ComisionRunt) : int {
			return ExpArit (ExpArit (ExpArit (ExpArit ExpRef{PrecioVehiculo} * ExpNum 0.19)+ (ExpArit (ExpRef{PrecioVehiculo} * ExpRef{ImpuestoVehiculo}))
				+ ExpRef{ValorTraspaso}) + ExpRef{ComisionRunt})
		}
		Operacion isUd=false CrearVehiculo (string Marca, string Modelo, string Linea, string Placa, int Cilindraje, int Precio){
			var Vehiculo vehiculo
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Marca"} = ExpRef {Marca})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Modelo"} = ExpRef {Modelo})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Linea"} = ExpRef {Linea})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Cilindraje"} = ExpRef {Cilindraje})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Placa"} = ExpRef {Placa})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Precio"} = ExpRef {Precio})
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Nuevo"} = ExpBool true)
			ExpArit (ExpRel ExpRef{vehiculo}.ExpRef{"Vehiculo.Comentarios"} = ExpTex "SinComentarios")
			ExpArit (ExpArit ExpRef {Vehiculos} GET ExpRef {Placa}) = ExpRef {vehiculo}
			if (ExpLog (ExpRef{Precio})>= (ExpNum 5.0 )){
				ExpArit (ExpArit ExpRef {VehiculosCaros} GET ExpRef {Placa}) = ExpRef {vehiculo}
			}else{
				ExpArit (ExpArit ExpRef {VehiculosBaratos} GET ExpRef {Placa}) = ExpRef {vehiculo}
			}
		}
		
	}
	tipodato String string
	tipodato uint int
	tipodato Boolean bool
	tipodato Map <string,string> : MapaVehiculos
}