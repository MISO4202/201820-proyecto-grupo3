//-----------------------------------------------------------------------
// <copyright file="Automarket.cs" company=" <auto-generated, change this tag by your enterprise name />  ">
//     Copyright (c) <auto-generated, change this tag by your enterprise name /> . All rights reserved.
// </copyright>
// <author> <auto-generated, change this tag by your name /> </author>
//-----------------------------------------------------------------------
using Stratis.SmartContracts;
using System.Linq;
using System;


public class AutoMarket : SmartContract 
{
	/// <summary>Get or set property Owner</summary>
	public Address Owner
    {
        get
        {
            return PersistentState.GetAddress("Owner");
        }
        private set
        {
            PersistentState.SetAddress("Owner", value);
        }
    }
 	/// <summary>Get or set property Vehiculo</summary>
	public struct Vehiculo {
		public string Marca; 
		public string Modelo; 
		public string Linea; 
		public int Cilindraje; 
		public Address Placa; 
		public int Precio; 
		public bool Nuevo; 
		public string Comentarios; 
	}
	public AutoMarket (ISmartContractState smartContractState)
    : base(smartContractState)
    {
       Owner = Message.Sender; 
    }
	/// <summary>Get or set property Vehiculos</summary>
    public ISmartContractMapping <Vehiculo> Vehiculos
    { 
       get 
       {
           return PersistentState.GetStructMapping<Vehiculo> ("Vehiculos");
       }
    }
    
	/// <summary>Get or set property VehiculosCaros</summary>
    public ISmartContractMapping <Vehiculo> VehiculosCaros
    { 
       get 
       {
           return PersistentState.GetStructMapping<Vehiculo> ("VehiculosCaros");
       }
    }
    
	/// <summary>Get or set property VehiculosBaratos</summary>
    public ISmartContractMapping <Vehiculo> VehiculosBaratos
    { 
       get 
       {
           return PersistentState.GetStructMapping<Vehiculo> ("VehiculosBaratos");
       }
    }
    
	/// <summary>Get or set property Prueba</summary>
    public String Prueba
    { 
       get 
       {
           return PersistentState.GetString("Prueba");
       }
       private set 
       {
           PersistentState.SetString("Prueba", value);
       }
    }
    
	
	/// <summary>  <auto-generated, change this tag by to description of the method />  </summary>
	/// <param name="Marca"></param>
	/// <param name="Modelo"></param>
	/// <param name="Linea"></param>
	/// <param name="Placa"></param>
	/// <param name="Cilindraje"></param>
	/// <param name="Precio"></param>
	/// <returns>  <auto-generated, change this tag by to description of the method returns />   </returns>
	public void CrearVehiculo (string Marca,string Modelo,string Linea,Address Placa,int Cilindraje,int Precio){
			Vehiculo vehiculo = new Vehiculo();
			vehiculo.Marca = Marca; 
			vehiculo.Modelo = Modelo; 
			vehiculo.Linea = Linea; 
			vehiculo.Cilindraje = Cilindraje; 
			vehiculo.Placa = Placa; 
			vehiculo.Precio = Precio; 
			vehiculo.Nuevo = true; 
			vehiculo.Comentarios =  "SinComentarios"; 
			Vehiculos[Placa] = vehiculo; 
			if((Precio >= 1000000000)){
				VehiculosCaros[Placa] = vehiculo;
			}else{	
				VehiculosBaratos[Placa] = vehiculo;
	
			}	 	
	}
	
	/// <summary>  <auto-generated, change this tag by to description of the method />  </summary>
	/// <param name="Placa"></param>
	/// <returns>  <auto-generated, change this tag by to description of the method returns />   </returns>
	public string ConsultarVehiculo (Address Placa){
			return Vehiculos[Placa].Marca;	
	}
	
	/// <summary>  <auto-generated, change this tag by to description of the method />  </summary>
	/// <param name="PrecioVehiculo"></param>
	/// <param name="ImpuestoVehiculo"></param>
	/// <param name="ValorTraspaso"></param>
	/// <param name="ComisionRunt"></param>
	/// <returns>  <auto-generated, change this tag by to description of the method returns />   </returns>
	public int CalcularCostos (int PrecioVehiculo,int ImpuestoVehiculo,int ValorTraspaso,int ComisionRunt){
			return (((PrecioVehiculo + (PrecioVehiculo * ImpuestoVehiculo)) + ValorTraspaso) + ComisionRunt);	
	}
	
	/// <summary>  <auto-generated, change this tag by to description of the method />  </summary>
	/// <param name="Placa"></param>
	/// <param name="Cilindraje"></param>
	/// <param name="Precio"></param>
	/// <returns>  <auto-generated, change this tag by to description of the method returns />   </returns>
	public void ActualizarVehiculo (Address Placa,int Cilindraje,int Precio){
			Vehiculo vehiculo = new Vehiculo();
			vehiculo.Cilindraje = Cilindraje; 
			vehiculo.Placa = Placa; 
			vehiculo.Precio = Precio; 
			vehiculo.Nuevo = true; 
			Vehiculos[Placa] = vehiculo; 
	}
 
}
