/*
 * generated by Xtext 2.12.0
 */
grammar InternalBlockchain;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package uniandes.mdd.aplicacion.blockchain.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uniandes.mdd.aplicacion.blockchain.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uniandes.mdd.aplicacion.blockchain.services.BlockchainGrammarAccess;

}

@parser::members {

 	private BlockchainGrammarAccess grammarAccess;

    public InternalBlockchainParser(TokenStream input, BlockchainGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Aplicacion";
   	}

   	@Override
   	protected BlockchainGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAplicacion
entryRuleAplicacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAplicacionRule()); }
	iv_ruleAplicacion=ruleAplicacion
	{ $current=$iv_ruleAplicacion.current; }
	EOF;

// Rule Aplicacion
ruleAplicacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAplicacionAccess().getAplicacionAction_0(),
					$current);
			}
		)
		otherlv_1='Aplicacion'
		{
			newLeafNode(otherlv_1, grammarAccess.getAplicacionAccess().getAplicacionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAplicacionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAplicacionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAplicacionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAplicacionAccess().getSmartcontractSmartContractParserRuleCall_4_0_0());
					}
					lv_smartcontract_4_0=ruleSmartContract
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAplicacionRule());
						}
						add(
							$current,
							"smartcontract",
							lv_smartcontract_4_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.SmartContract");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAplicacionAccess().getSmartcontractSmartContractParserRuleCall_4_1_0());
					}
					lv_smartcontract_5_0=ruleSmartContract
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAplicacionRule());
						}
						add(
							$current,
							"smartcontract",
							lv_smartcontract_5_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.SmartContract");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_6='tipodato'
			{
				newLeafNode(otherlv_6, grammarAccess.getAplicacionAccess().getTipodatoKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAplicacionAccess().getTipodatoTipoDatoParserRuleCall_5_1_0());
					}
					lv_tipodato_7_0=ruleTipoDato
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAplicacionRule());
						}
						add(
							$current,
							"tipodato",
							lv_tipodato_7_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.TipoDato");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getAplicacionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTipoDato
entryRuleTipoDato returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTipoDatoRule()); }
	iv_ruleTipoDato=ruleTipoDato
	{ $current=$iv_ruleTipoDato.current; }
	EOF;

// Rule TipoDato
ruleTipoDato returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTipoDatoAccess().getEntidadParserRuleCall_0());
		}
		this_Entidad_0=ruleEntidad
		{
			$current = $this_Entidad_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTipoDatoAccess().getPrimitivoParserRuleCall_1());
		}
		this_Primitivo_1=rulePrimitivo
		{
			$current = $this_Primitivo_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTipoDatoAccess().getMapaParserRuleCall_2());
		}
		this_Mapa_2=ruleMapa
		{
			$current = $this_Mapa_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLinea
entryRuleLinea returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineaRule()); }
	iv_ruleLinea=ruleLinea
	{ $current=$iv_ruleLinea.current; }
	EOF;

// Rule Linea
ruleLinea returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLineaAccess().getExpresionParserRuleCall_0());
		}
		this_Expresion_0=ruleExpresion
		{
			$current = $this_Expresion_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLineaAccess().getVariableParserRuleCall_1());
		}
		this_Variable_1=ruleVariable
		{
			$current = $this_Variable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLineaAccess().getCondicionalParserRuleCall_2());
		}
		this_Condicional_2=ruleCondicional
		{
			$current = $this_Condicional_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLineaAccess().getRetornoParserRuleCall_3());
		}
		this_Retorno_3=ruleRetorno
		{
			$current = $this_Retorno_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpresion
entryRuleExpresion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionRule()); }
	iv_ruleExpresion=ruleExpresion
	{ $current=$iv_ruleExpresion.current; }
	EOF;

// Rule Expresion
ruleExpresion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionLogicaParserRuleCall_0());
		}
		this_ExpresionLogica_0=ruleExpresionLogica
		{
			$current = $this_ExpresionLogica_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionAritmeticaParserRuleCall_1());
		}
		this_ExpresionAritmetica_1=ruleExpresionAritmetica
		{
			$current = $this_ExpresionAritmetica_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionNumericaIntParserRuleCall_2());
		}
		this_ExpresionNumericaInt_2=ruleExpresionNumericaInt
		{
			$current = $this_ExpresionNumericaInt_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionTextoParserRuleCall_3());
		}
		this_ExpresionTexto_3=ruleExpresionTexto
		{
			$current = $this_ExpresionTexto_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionBooleanParserRuleCall_4());
		}
		this_ExpresionBoolean_4=ruleExpresionBoolean
		{
			$current = $this_ExpresionBoolean_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionReferenciadaParserRuleCall_5());
		}
		this_ExpresionReferenciada_5=ruleExpresionReferenciada
		{
			$current = $this_ExpresionReferenciada_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionRelacionalParserRuleCall_6());
		}
		this_ExpresionRelacional_6=ruleExpresionRelacional
		{
			$current = $this_ExpresionRelacional_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpresionAccess().getExpresionNumericaDoubleParserRuleCall_7());
		}
		this_ExpresionNumericaDouble_7=ruleExpresionNumericaDouble
		{
			$current = $this_ExpresionNumericaDouble_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSmartContract
entryRuleSmartContract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSmartContractRule()); }
	iv_ruleSmartContract=ruleSmartContract
	{ $current=$iv_ruleSmartContract.current; }
	EOF;

// Rule SmartContract
ruleSmartContract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SmartContract'
		{
			newLeafNode(otherlv_0, grammarAccess.getSmartContractAccess().getSmartContractKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSmartContractAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSmartContractRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSmartContractAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartContractAccess().getEntidadesEntidadParserRuleCall_3_0_0());
					}
					lv_entidades_3_0=ruleEntidad
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartContractRule());
						}
						add(
							$current,
							"entidades",
							lv_entidades_3_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Entidad");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartContractAccess().getEntidadesEntidadParserRuleCall_3_1_0());
					}
					lv_entidades_4_0=ruleEntidad
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartContractRule());
						}
						add(
							$current,
							"entidades",
							lv_entidades_4_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Entidad");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartContractAccess().getEstadoEstadoParserRuleCall_4_0_0());
					}
					lv_estado_5_0=ruleEstado
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartContractRule());
						}
						add(
							$current,
							"estado",
							lv_estado_5_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Estado");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartContractAccess().getEstadoEstadoParserRuleCall_4_1_0());
					}
					lv_estado_6_0=ruleEstado
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartContractRule());
						}
						add(
							$current,
							"estado",
							lv_estado_6_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Estado");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartContractAccess().getOperacionesOperacionParserRuleCall_5_0_0());
					}
					lv_operaciones_7_0=ruleOperacion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartContractRule());
						}
						add(
							$current,
							"operaciones",
							lv_operaciones_7_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Operacion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartContractAccess().getOperacionesOperacionParserRuleCall_5_1_0());
					}
					lv_operaciones_8_0=ruleOperacion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartContractRule());
						}
						add(
							$current,
							"operaciones",
							lv_operaciones_8_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Operacion");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSmartContractAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEntidad
entryRuleEntidad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntidadRule()); }
	iv_ruleEntidad=ruleEntidad
	{ $current=$iv_ruleEntidad.current; }
	EOF;

// Rule Entidad
ruleEntidad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEntidadAccess().getEntidadAction_0(),
					$current);
			}
		)
		otherlv_1='Entidad'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntidadAccess().getEntidadKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntidadAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntidadRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEntidadAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEntidadAccess().getAtributosAtributoParserRuleCall_4_0_0());
					}
					lv_atributos_4_0=ruleAtributo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntidadRule());
						}
						add(
							$current,
							"atributos",
							lv_atributos_4_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Atributo");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEntidadAccess().getAtributosAtributoParserRuleCall_4_1_0());
					}
					lv_atributos_5_0=ruleAtributo
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntidadRule());
						}
						add(
							$current,
							"atributos",
							lv_atributos_5_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Atributo");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEntidadAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleOperacion
entryRuleOperacion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperacionRule()); }
	iv_ruleOperacion=ruleOperacion
	{ $current=$iv_ruleOperacion.current; }
	EOF;

// Rule Operacion
ruleOperacion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Operacion'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperacionAccess().getOperacionKeyword_0());
		}
		(
			otherlv_1='isUd='
			{
				newLeafNode(otherlv_1, grammarAccess.getOperacionAccess().getIsUdKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperacionAccess().getEsUserDefinedEBooleanParserRuleCall_1_1_0());
					}
					lv_esUserDefined_2_0=ruleEBoolean
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperacionRule());
						}
						set(
							$current,
							"esUserDefined",
							true,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.EBoolean");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperacionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperacionRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getOperacionAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperacionAccess().getParametrosParametroParserRuleCall_4_0_0());
					}
					lv_parametros_5_0=ruleParametro
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperacionRule());
						}
						add(
							$current,
							"parametros",
							lv_parametros_5_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.Parametro");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getOperacionAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperacionAccess().getParametrosParametroParserRuleCall_4_1_1_0());
						}
						lv_parametros_7_0=ruleParametro
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperacionRule());
							}
							add(
								$current,
								"parametros",
								lv_parametros_7_0,
								"uniandes.mdd.aplicacion.blockchain.Blockchain.Parametro");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getOperacionAccess().getRightParenthesisKeyword_5());
		}
		(
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getOperacionAccess().getColonKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperacionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getOperacionAccess().getRetornoTipoDatoCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getOperacionAccess().getLeftCurlyBracketKeyword_7());
		}
		(
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getOperacionAccess().getLeftParenthesisKeyword_8());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getOperacionAccess().getLineasLineaParserRuleCall_9_0());
				}
				lv_lineas_13_0=ruleLinea
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperacionRule());
					}
					add(
						$current,
						"lineas",
						lv_lineas_13_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Linea");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getOperacionAccess().getRightParenthesisKeyword_10());
			}
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getOperacionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleEstado
entryRuleEstado returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEstadoRule()); }
	iv_ruleEstado=ruleEstado
	{ $current=$iv_ruleEstado.current; }
	EOF;

// Rule Estado
ruleEstado returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Estado'
		{
			newLeafNode(otherlv_0, grammarAccess.getEstadoAccess().getEstadoKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEstadoRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEstadoAccess().getTipodatoTipoDatoCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEstadoAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEstadoRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtributo
entryRuleAtributo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtributoRule()); }
	iv_ruleAtributo=ruleAtributo
	{ $current=$iv_ruleAtributo.current; }
	EOF;

// Rule Atributo
ruleAtributo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtributoRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAtributoAccess().getTipodatoTipoDatoCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAtributoAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtributoRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParametro
entryRuleParametro returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametroRule()); }
	iv_ruleParametro=ruleParametro
	{ $current=$iv_ruleParametro.current; }
	EOF;

// Rule Parametro
ruleParametro returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParametroRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParametroAccess().getTipodatoTipoDatoCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParametroAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametroRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleExpresionLogica
entryRuleExpresionLogica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionLogicaRule()); }
	iv_ruleExpresionLogica=ruleExpresionLogica
	{ $current=$iv_ruleExpresionLogica.current; }
	EOF;

// Rule ExpresionLogica
ruleExpresionLogica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExpLog'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpresionLogicaAccess().getExpLogKeyword_0());
		}
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getExpresionLogicaAccess().getLeftParenthesisKeyword_1());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionLogicaAccess().getIzqExpresionParserRuleCall_2_0());
				}
				lv_izq_2_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionLogicaRule());
					}
					set(
						$current,
						"izq",
						lv_izq_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getExpresionLogicaAccess().getRightParenthesisKeyword_3());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionLogicaAccess().getOperadorOperadorLogicoEnumRuleCall_4_0());
				}
				lv_operador_4_0=ruleOperadorLogico
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionLogicaRule());
					}
					set(
						$current,
						"operador",
						lv_operador_4_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.OperadorLogico");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getExpresionLogicaAccess().getLeftParenthesisKeyword_5());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionLogicaAccess().getDerExpresionParserRuleCall_6_0());
				}
				lv_der_6_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionLogicaRule());
					}
					set(
						$current,
						"der",
						lv_der_6_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getExpresionLogicaAccess().getRightParenthesisKeyword_7());
			}
		)*
	)
;

// Entry rule entryRuleExpresionAritmetica
entryRuleExpresionAritmetica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionAritmeticaRule()); }
	iv_ruleExpresionAritmetica=ruleExpresionAritmetica
	{ $current=$iv_ruleExpresionAritmetica.current; }
	EOF;

// Rule ExpresionAritmetica
ruleExpresionAritmetica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpresionAritmeticaAccess().getExpresionAritmeticaAction_0(),
					$current);
			}
		)
		otherlv_1='ExpArit'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpresionAritmeticaAccess().getExpAritKeyword_1());
		}
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getExpresionAritmeticaAccess().getLeftParenthesisKeyword_2());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getIzqExpresionParserRuleCall_3_0());
				}
				lv_izq_3_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionAritmeticaRule());
					}
					set(
						$current,
						"izq",
						lv_izq_3_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getExpresionAritmeticaAccess().getRightParenthesisKeyword_4());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getOperadorOperadorEnumRuleCall_5_0());
				}
				lv_operador_5_0=ruleOperador
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionAritmeticaRule());
					}
					set(
						$current,
						"operador",
						lv_operador_5_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Operador");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getExpresionAritmeticaAccess().getLeftParenthesisKeyword_6());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionAritmeticaAccess().getDerExpresionParserRuleCall_7_0());
				}
				lv_der_7_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionAritmeticaRule());
					}
					set(
						$current,
						"der",
						lv_der_7_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getExpresionAritmeticaAccess().getRightParenthesisKeyword_8());
			}
		)*
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVarKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVariableAccess().getTipodatoTipoDatoCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleCondicional
entryRuleCondicional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondicionalRule()); }
	iv_ruleCondicional=ruleCondicional
	{ $current=$iv_ruleCondicional.current; }
	EOF;

// Rule Condicional
ruleCondicional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getCondicionalAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getExpresionlogicaExpresionLogicaParserRuleCall_1_0());
				}
				lv_expresionlogica_1_0=ruleExpresionLogica
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					set(
						$current,
						"expresionlogica",
						lv_expresionlogica_1_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.ExpresionLogica");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCondicionalAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getLineasLineaParserRuleCall_3_0());
				}
				lv_lineas_3_0=ruleLinea
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					add(
						$current,
						"lineas",
						lv_lineas_3_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Linea");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getCondicionalAccess().getRightCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCondicionalAccess().getElseLinesElseParserRuleCall_5_0());
				}
				lv_elseLines_5_0=ruleElse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondicionalRule());
					}
					set(
						$current,
						"elseLines",
						lv_elseLines_5_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Else");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleElse
entryRuleElse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseRule()); }
	iv_ruleElse=ruleElse
	{ $current=$iv_ruleElse.current; }
	EOF;

// Rule Else
ruleElse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='else'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseAccess().getElseKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getElseAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseAccess().getLineasLineaParserRuleCall_2_0());
				}
				lv_lineas_2_0=ruleLinea
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseRule());
					}
					add(
						$current,
						"lineas",
						lv_lineas_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Linea");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getElseAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleExpresionNumericaInt
entryRuleExpresionNumericaInt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionNumericaIntRule()); }
	iv_ruleExpresionNumericaInt=ruleExpresionNumericaInt
	{ $current=$iv_ruleExpresionNumericaInt.current; }
	EOF;

// Rule ExpresionNumericaInt
ruleExpresionNumericaInt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpresionNumericaIntAccess().getExpresionNumericaIntAction_0(),
					$current);
			}
		)
		otherlv_1='ExpNum'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpresionNumericaIntAccess().getExpNumKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionNumericaIntAccess().getValueEIntParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionNumericaIntRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpresionNumericaDouble
entryRuleExpresionNumericaDouble returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionNumericaDoubleRule()); }
	iv_ruleExpresionNumericaDouble=ruleExpresionNumericaDouble
	{ $current=$iv_ruleExpresionNumericaDouble.current; }
	EOF;

// Rule ExpresionNumericaDouble
ruleExpresionNumericaDouble returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpresionNumericaDoubleAccess().getExpresionNumericaDoubleAction_0(),
					$current);
			}
		)
		otherlv_1='ExpNumDouble'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpresionNumericaDoubleAccess().getExpNumDoubleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionNumericaDoubleAccess().getValueEDoubleParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionNumericaDoubleRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpresionTexto
entryRuleExpresionTexto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionTextoRule()); }
	iv_ruleExpresionTexto=ruleExpresionTexto
	{ $current=$iv_ruleExpresionTexto.current; }
	EOF;

// Rule ExpresionTexto
ruleExpresionTexto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpresionTextoAccess().getExpresionTextoAction_0(),
					$current);
			}
		)
		otherlv_1='ExpTex'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpresionTextoAccess().getExpTexKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionTextoAccess().getValueEStringParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionTextoRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpresionBoolean
entryRuleExpresionBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionBooleanRule()); }
	iv_ruleExpresionBoolean=ruleExpresionBoolean
	{ $current=$iv_ruleExpresionBoolean.current; }
	EOF;

// Rule ExpresionBoolean
ruleExpresionBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpresionBooleanAccess().getExpresionBooleanAction_0(),
					$current);
			}
		)
		otherlv_1='ExpBool'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpresionBooleanAccess().getExpBoolKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionBooleanAccess().getValueEBooleanParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionBooleanRule());
					}
					set(
						$current,
						"value",
						true,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleExpresionReferenciada
entryRuleExpresionReferenciada returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionReferenciadaRule()); }
	iv_ruleExpresionReferenciada=ruleExpresionReferenciada
	{ $current=$iv_ruleExpresionReferenciada.current; }
	EOF;

// Rule ExpresionReferenciada
ruleExpresionReferenciada returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExpRef'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpresionReferenciadaAccess().getExpRefKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpresionReferenciadaAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpresionReferenciadaAccess().getIdKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpresionReferenciadaAccess().getIdEIntParserRuleCall_2_1_0());
					}
					lv_id_3_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpresionReferenciadaRule());
						}
						set(
							$current,
							"id",
							lv_id_3_0,
							"uniandes.mdd.aplicacion.blockchain.Blockchain.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpresionReferenciadaRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getExpresionReferenciadaAccess().getReferenciaNamedElementCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getExpresionReferenciadaAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleExpresionRelacional
entryRuleExpresionRelacional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpresionRelacionalRule()); }
	iv_ruleExpresionRelacional=ruleExpresionRelacional
	{ $current=$iv_ruleExpresionRelacional.current; }
	EOF;

// Rule ExpresionRelacional
ruleExpresionRelacional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExpRel'
		{
			newLeafNode(otherlv_0, grammarAccess.getExpresionRelacionalAccess().getExpRelKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionRelacionalAccess().getIzqExpresionParserRuleCall_1_0());
				}
				lv_izq_1_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionRelacionalRule());
					}
					set(
						$current,
						"izq",
						lv_izq_1_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionRelacionalAccess().getOperadorRelacionalOperadorRelacionEnumRuleCall_2_0());
				}
				lv_operadorRelacional_2_0=ruleOperadorRelacion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionRelacionalRule());
					}
					set(
						$current,
						"operadorRelacional",
						lv_operadorRelacional_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.OperadorRelacion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExpresionRelacionalAccess().getDerExpresionParserRuleCall_3_0());
				}
				lv_der_3_0=ruleExpresion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpresionRelacionalRule());
					}
					set(
						$current,
						"der",
						lv_der_3_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Expresion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRetorno
entryRuleRetorno returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRetornoRule()); }
	iv_ruleRetorno=ruleRetorno
	{ $current=$iv_ruleRetorno.current; }
	EOF;

// Rule Retorno
ruleRetorno returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getRetornoAccess().getReturnKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRetornoAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRetornoAccess().getLineaRetornoLineaParserRuleCall_2_0());
				}
				lv_lineaRetorno_2_0=ruleLinea
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRetornoRule());
					}
					add(
						$current,
						"lineaRetorno",
						lv_lineaRetorno_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.Linea");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getRetornoAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePrimitivo
entryRulePrimitivo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitivoRule()); }
	iv_rulePrimitivo=rulePrimitivo
	{ $current=$iv_rulePrimitivo.current; }
	EOF;

// Rule Primitivo
rulePrimitivo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPrimitivoAccess().getPrimitivoAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitivoAccess().getTipoDatoPrimitivoEnumRuleCall_1_0());
				}
				lv_tipo_1_0=ruleDatoPrimitivo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitivoRule());
					}
					set(
						$current,
						"tipo",
						lv_tipo_1_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.DatoPrimitivo");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimitivoAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimitivoRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMapa
entryRuleMapa returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapaRule()); }
	iv_ruleMapa=ruleMapa
	{ $current=$iv_ruleMapa.current; }
	EOF;

// Rule Mapa
ruleMapa returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Map'
		{
			newLeafNode(otherlv_0, grammarAccess.getMapaAccess().getMapKeyword_0());
		}
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapaAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapaRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMapaAccess().getTipoDatoKeyTipoDatoCrossReference_2_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getMapaAccess().getCommaKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapaRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMapaAccess().getTipoDatoValueTipoDatoCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='>'
		{
			newLeafNode(otherlv_5, grammarAccess.getMapaAccess().getGreaterThanSignKeyword_5());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getMapaAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapaAccess().getNameEStringParserRuleCall_7_0());
				}
				lv_name_7_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapaRule());
					}
					set(
						$current,
						"name",
						lv_name_7_0,
						"uniandes.mdd.aplicacion.blockchain.Blockchain.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule OperadorLogico
ruleOperadorLogico returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='=='
			{
				$current = grammarAccess.getOperadorLogicoAccess().getIGUAL_IGUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperadorLogicoAccess().getIGUAL_IGUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!='
			{
				$current = grammarAccess.getOperadorLogicoAccess().getDIFERENTEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperadorLogicoAccess().getDIFERENTEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='>'
			{
				$current = grammarAccess.getOperadorLogicoAccess().getMAYORQUEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperadorLogicoAccess().getMAYORQUEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='<'
			{
				$current = grammarAccess.getOperadorLogicoAccess().getMENORQUEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperadorLogicoAccess().getMENORQUEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>='
			{
				$current = grammarAccess.getOperadorLogicoAccess().getMAYORIGUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOperadorLogicoAccess().getMAYORIGUALEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='<='
			{
				$current = grammarAccess.getOperadorLogicoAccess().getMENORIGUALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOperadorLogicoAccess().getMENORIGUALEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='&&'
			{
				$current = grammarAccess.getOperadorLogicoAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getOperadorLogicoAccess().getANDEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='||'
			{
				$current = grammarAccess.getOperadorLogicoAccess().getOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getOperadorLogicoAccess().getOREnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule Operador
ruleOperador returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getOperadorAccess().getMASEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperadorAccess().getMASEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getOperadorAccess().getMENOSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperadorAccess().getMENOSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='*'
			{
				$current = grammarAccess.getOperadorAccess().getPRODUCTOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperadorAccess().getPRODUCTOEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='/'
			{
				$current = grammarAccess.getOperadorAccess().getDIVISIONEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperadorAccess().getDIVISIONEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='='
			{
				$current = grammarAccess.getOperadorAccess().getIGUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getOperadorAccess().getIGUALEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='GET'
			{
				$current = grammarAccess.getOperadorAccess().getGETEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getOperadorAccess().getGETEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='DELETE'
			{
				$current = grammarAccess.getOperadorAccess().getDELETEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getOperadorAccess().getDELETEEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='PUT'
			{
				$current = grammarAccess.getOperadorAccess().getPUTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getOperadorAccess().getPUTEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule OperadorRelacion
ruleOperadorRelacion returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='.'
		{
			$current = grammarAccess.getOperadorRelacionAccess().getPUNTOEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getOperadorRelacionAccess().getPUNTOEnumLiteralDeclaration());
		}
	)
;

// Rule DatoPrimitivo
ruleDatoPrimitivo returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getDatoPrimitivoAccess().getSTRINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDatoPrimitivoAccess().getSTRINGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Integer'
			{
				$current = grammarAccess.getDatoPrimitivoAccess().getINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDatoPrimitivoAccess().getINTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Boolean'
			{
				$current = grammarAccess.getDatoPrimitivoAccess().getBOOLEANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDatoPrimitivoAccess().getBOOLEANEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='ADDRESS'
			{
				$current = grammarAccess.getDatoPrimitivoAccess().getADDRESSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDatoPrimitivoAccess().getADDRESSEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Double'
			{
				$current = grammarAccess.getDatoPrimitivoAccess().getDOUBLEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDatoPrimitivoAccess().getDOUBLEEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
